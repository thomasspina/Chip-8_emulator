#pragma once

#include <unordered_map>

// Change default game here
#define GAME "Brix"

#define SC8_SCREEN_WIDTH 128
#define SC8_SCREEN_HEIGHT 64
#define SC8_SCREEN_SCALE 10

#define KEY_WAIT_BUFFER_EMPTY 0x10

#define AUDIO_FREQ 440.f
#define AUDIO_DESIRED_FREQ 44100
#define AUDIO_SAMPLES 2048
#define AUDIO_VOLUME .2f

constexpr bool str_equals(const char* a, const char* b) {
    while (*a && *b && *a == *b) { ++a; ++b; }
    return *a == *b;
}

namespace c8const {
    constexpr float TIMER_FREQ = 1 / 60.0;
    constexpr float EMULATOR_FREQ = (str_equals(GAME, "WORM3") || 
                                    str_equals(GAME, "PIPER") || 
                                    str_equals(GAME, "JOUST") || 
                                    str_equals(GAME, "ALIEN")) ? 1 / 2000.0 : 1 / 500.0;
    constexpr int PROGRAM_START_ADDR = 512;

    constexpr unsigned char chip8_fontset[240] = 
    { 
        0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
        0x20, 0x60, 0x20, 0x20, 0x70, // 1
        0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
        0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
        0x90, 0x90, 0xF0, 0x10, 0x10, // 4
        0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
        0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
        0xF0, 0x10, 0x20, 0x40, 0x40, // 7
        0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
        0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
        0xF0, 0x90, 0xF0, 0x90, 0x90, // A
        0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
        0xF0, 0x80, 0x80, 0x80, 0xF0, // C
        0xE0, 0x90, 0x90, 0x90, 0xE0, // D
        0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
        0xF0, 0x80, 0xF0, 0x80, 0x80, // F

        // high-res mode font sprites (0-9)
        0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C, // 0
        0x18, 0x38, 0x58, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C, // 1
        0x3E, 0x7F, 0xC3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xFF, 0xFF, // 2
        0x3C, 0x7E, 0xC3, 0x03, 0x0E, 0x0E, 0x03, 0xC3, 0x7E, 0x3C, // 3
        0x06, 0x0E, 0x1E, 0x36, 0x66, 0xC6, 0xFF, 0xFF, 0x06, 0x06, // 4
        0xFF, 0xFF, 0xC0, 0xC0, 0xFC, 0xFE, 0x03, 0xC3, 0x7E, 0x3C, // 5
        0x3E, 0x7C, 0xC0, 0xC0, 0xFC, 0xFE, 0xC3, 0xC3, 0x7E, 0x3C, // 6
        0xFF, 0xFF, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x60, 0x60, // 7
        0x3C, 0x7E, 0xC3, 0xC3, 0x7E, 0x7E, 0xC3, 0xC3, 0x7E, 0x3C, // 8
        0x3C, 0x7E, 0xC3, 0xC3, 0x7F, 0x3F, 0x03, 0x03, 0x3E, 0x7C  // 9
    };
    
    const std::unordered_map<char, unsigned char> key_map = {
        {'1', 0x1}, {'2', 0x2}, {'3', 0x3}, {'4', 0xC}, 
        {'Q', 0x4}, {'W', 0x5}, {'E', 0x6}, {'R', 0xD},
        {'A', 0x7}, {'S', 0x8}, {'D', 0x9}, {'F', 0xE},
        {'Z', 0xA}, {'X', 0x0}, {'C', 0xB}, {'V', 0xF}
    };
}
